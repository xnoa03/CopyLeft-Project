#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<time.h>
#include<windows.h>

int main()
{
    struct tm*t;
    time_t base = time(NULL);

    t = localtime(&base);

    int y1, m1, d1, dates;
    char name[100];
    printf("\x1b[37mEnter D-day name\n");
    gets(name);
    printf("\x1b[37mEnter D-day yyyy mm dd\n");
    scanf("%d %d %d" , &y1, &m1, &d1);

    int y2 = t->tm_year + 1900;
    int m2 = t->tm_mon + 1;
    int d2 = t->tm_mday;
    dates = D_day(y1, m1, d1) - D_day(y2, m2, d2);
    if(dates > 10) { 
        printf("\x1b[33m%s-%d\n", name, dates);
    }
    else if(5 < dates && dates <= 10) { 
        printf("\x1b[32m%s-%d\n", name, dates);
    }
    else if(0 < dates && dates <= 5) { 
        printf("\x1b[31m%s-%d\n", name, dates);
    }
    else if(dates == 0) {
        printf("%s!!\n",name);
    }
    else if(dates < 0) {
        printf("\x1b[37m%s+%d\n", name, dates -(2 * dates));
    }
    

    return 0;
}

int D_day(int y, int m, int d)
{
    int month[] = {31,28,31,30,31,30,31,31,30,31,30,31};
    long total = 0L;

    total = (y - 1) * 365L + (y - 1) / 4 - (y - 1) / 100 + (y - 1) / 400;
    if(!(y % 4) && y % 100 || !(y % 400))
        month[1]++;
    for(int i = 0; i < m - 1; i++){
        total += month[i];
    }
    total += d;

    return total;
}
