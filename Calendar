//오픈소스SW이해 및 실습 - Calendar

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <conio.h>
#include <Windows.h>

void calendar() // 달력을 만드는 함수
{
    int year, month, date;
    int lastyear;
    int total_day[] = {0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};

    printf("    년/월을 입력하세요 : ");
    scanf("%d %d", &year, &month);

    if (month == 2 && (year) % 4 == 0 && ((year) % 100 != 0 || (year) % 400 == 0))
    {
        total_day[2] = 29;
    }

    lastyear = year - 1;

    date = (lastyear + (lastyear / 4) - (lastyear / 100) + (lastyear / 400) + 1) % 7;

    for (int i = 1; i < month; i++)
    {
        date += total_day[i];
        date %= 7;
    }

    printf("\n          [ %d년 %d월 ]\n\n", year, month);
    printf("    Sun Mon Tue Wed Thu Fri Sat");

    for (int i = -date; i < total_day[month]; i++)
    {
        if ((i + date) % 7 == 0)
        {
            printf("\n\n");
            printf("   ");
        }
        if (i < 0)
        {
            printf("    ");
        }
        else
        {
            printf("%4d", i + 1);
        }
    }

    return;
}

void schedule()
{
    int date = 0;
    int month = 0;
    int year = 0;
    char memo[100];
    char zero[100];

    FILE *fp;
    fp = fopen("data.txt", "a+");
    printf(" 년/월/일을 입력하세요 : ");
    scanf("%d %d %d", &date, &month, &year);
    fprintf(fp, "%d/%d/%d-", date, month, year);
    printf("\n\n\n          메모를 입력하세요\n\n--> ");
    gets(zero);
    gets(memo);
    fprintf(fp, "%s\n", memo);

    fclose(fp);
    return;
}

void all_schedule()
{
    int pass = 0;
    char serch[100];
    char buffer[100];
    int count = 1;
    char year[100];
    char month[100];
    char date[100];
    char buffer2[100];

    FILE *fp = fopen("data.txt", "r");

    printf(" 년/월/일을 입력하세요 : ");
    scanf("%s %s %s", year, month, date);
    printf("\n  \x1b[33m%s/%s/%s\x1b[37m에 기록된 스케줄입니다\n\n\n", year, month, date);

    while (fgets(buffer, 100, fp))
    {

        if (strstr(buffer, year) && strstr(buffer, month) && strstr(buffer, date))
        {
            char *ptr = strtok(buffer, "-");
            printf(" %d. %s\n", count++, strtok(NULL, "\0"));
            pass++;
        }
    }

    if (pass == 0)
    {
        printf("      등록된 스케줄이 없습니다!");
    }

    fclose(fp);
    return;
}

int main()
{
    SetConsoleTitle("Calendar - CopyLeft");
    system("mode con cols=36 lines=20");

    int choice;

    time_t timer;
    struct tm *t;
    timer = time(NULL);
    t = localtime(&timer);

    while (1)
    {
        system("cls");
        printf("\n");
        printf("         \x1b[33m[%d년 %d월 %d일]\n\n\n", t->tm_year + 1900, t->tm_mon + 1, t->tm_mday);
        printf("            \x1b[37m1. 달력 보기\n\n");
        printf("         2. 스케줄 등록하기\n\n");
        printf("       3. 등록된 스케줄 보기\n\n");
        printf("            4. 종료하기\n\n\n");
        printf("    원하는 작업을 입력하세요 : ");
        scanf("%d", &choice);
        system("cls");

        switch (choice)
        {
        case 1:
            calendar();
            printf("\n\n\n 계속하려면 아무 키나 누르십시오...");
            getch();
            break;

        case 2:
            schedule();
            printf("\n\n\n 계속하려면 아무 키나 누르십시오...");
            getch();
            break;

        case 3:
            all_schedule();
            printf("\n\n\n 계속하려면 아무 키나 누르십시오...");
            getch();
            break;

        case 4:
            return 0;
        }
    }

    return 0;
}
